@inject IJSRuntime JS;

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item m-2">
            <label class="switch">
                <input type="checkbox" @onclick="SwapColorScheme"/>
                <span class="slider round"></span>
            </label>
            <span class="oi @((_lightMode) ? "oi-sun" : "oi-moon") m-2" aria-hidden="true" style="color:#ffffff"></span>
        </li>
        <li class="nav-item m-2">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Main
            </NavLink>
        </li>
        <li class="nav-item m-2">
            <NavLink class="nav-link" href="#">
                <span class="oi oi-bolt" aria-hidden="true"></span> Skills
            </NavLink>
        </li>
        <li class="nav-item m-2">
            <NavLink class="nav-link" href="https://www.facebook.com/aronkalo.official/">
                <span class="oi oi-person" aria-hidden="true"></span> Facebook
            </NavLink>
        </li>
        <li class="nav-item m-2">
            <NavLink class="nav-link" href="https://github.com/aronkalo">
                <span class="oi oi-fork" aria-hidden="true"></span> Github
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool _lightMode = false;
    private IJSObjectReference _jsModule;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        _jsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/custom.js");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task SwapColorScheme()
    {
        _lightMode = !_lightMode;
        await _jsModule.InvokeVoidAsync("changeColorScheme", _lightMode);
    }
}
